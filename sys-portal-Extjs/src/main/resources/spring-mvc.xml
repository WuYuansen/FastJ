<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd    
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd    
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.0.xsd    
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd    
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd    
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd    
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd    
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-3.0.xsd    
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd    
        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd    
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd    
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd    
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">


	<!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射 -->
	<mvc:annotation-driven />

	<!-- <context:annotation-config /> -->

	<!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->
	<context:component-scan base-package="*"></context:component-scan>
	<context:component-scan base-package="com.gtjy.p2p.modules.*"></context:component-scan>

	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="webBindingInitializer">
			<bean class="org.gtjy.p2p.web.springMVC.webframe.web.springmvc.interceptor.MyWebBinding" />
		</property>
	</bean>
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"  p:order="1">
		<property name="favorPathExtension" value="true" />
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<!-- 在没有扩展名时即: "/user/1" 时的默认展现形式 -->
		<property name="defaultContentType" value="text/html" />

		<!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
			</map>
		</property>
		<!-- 用于开启 ?format=json 的支持 -->
		<property name="favorParameter" value="true" />
		<!-- 页面映射视图 -->
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="prefix" value="/WEB-INF/views/modules/" />
					<property name="suffix" value=".jsp"></property>
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller"
							p:autodetectAnnotations="true" />
					</property>
				</bean>
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="extractValueFromSingleKeyModel" value="true" />
				</bean>
			</list>
		</property>
	</bean>
	<!-- 允许对静态资源文件的访问 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 -->
    <mvc:resources mapping="/app/**" location="/app/" cache-period="31536000"/>
    
	<bean id="SpringContextUtil " class="org.gtjy.p2p.spring.SpringContextUtil" />
	
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />
	</mvc:interceptors>
	<!-- 日志拦截器配置 -->
	<mvc:interceptors>
			<!-- <mvc:mapping path="/manager/services/**" /> -->
			<mvc:interceptor>
				<!--<mvc:mapping path="/manager/services/**"/> -->
				<mvc:mapping path="/**"/>
				<bean class="com.gtjy.p2p.modules.tiles.commontypes.Interceptor.LogInterceptor"></bean>				
			</mvc:interceptor>
	</mvc:interceptors>
	<!-- 访问方法鉴权拦截器 --> 
	<bean id="authenticationInterceptor" class="org.gtjy.p2p.security.authentication.AuthenticationInterceptor"></bean>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="authenticationPointcut" expression="@within(org.springframework.stereotype.Component) and not execution(private * com.gtjy.p2p.mpdules.tiles..*.impl.*Impl.*(..))"/>
		<aop:advisor advice-ref="authenticationInterceptor" pointcut-ref="authenticationPointcut" />
	</aop:config>
	<!-- 缓存配置 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	<!-- session 拦截器 
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.gtjy.p2p.web.springMVC.webframe.web.springmvc.interceptor.EncodingInterceptor" />
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="org.gtjy.p2p.web.springMVC.webframe.web.springmvc.interceptor.AuthInterceptor">
				<property name="excludeUrls">
					<list>
						<value><![CDATA[/services/login]]></value>
					</list>
				</property>
				<property name="siteType"><value>manager</value></property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors-->
	
	<!-- 统一异常处理 -->
	<bean class="org.gtjy.p2p.web.springMVC.webframe.web.springmvc.exception.ExceptionHandler"></bean>
	<!-- 配置MultipartResolver 用于文件上传 使用spring的CommosMultipartResolver -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"  
        p:defaultEncoding="UTF-8"  
        p:maxUploadSize="5400000"  
        p:uploadTempDir="fileUpload/temp"  
     >  
    </bean>  
</beans>